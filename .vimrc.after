" Aesthetics
" set background=light
" color mustang
" color railscasts2

" let g:solarized_termcolors=256
set t_Co=16
set background=dark
colorscheme solarized

nmap \ ,

nnoremap / /\v
vnoremap / /\v
nnoremap <leader><space> :noh<cr>

au FocusLost * :wa
  
map <Leader>w :w<CR>
map <Leader>q :q<CR>
map <Leader>qq :q!<CR>

map <Leader>em :e ~/.vimrc.after<CR>
nnoremap <Leader>s :source %<CR>
set pastetoggle=<C-g>p

nnoremap <Leader>s :source %<CR>

" Syntax Highlighting
au BufNewFile,BufRead *.god set filetype=ruby

" Janus overwrites
nnoremap <Leader>hs :nohlsearch<CR>
" Fix below
" cnoremap %% <C-R>=expand('%:h').'/'<CR>
" map <Leader>gk :edit %%

" Basic Config
set cmdheight=1
set hidden
set nobackup
set noswapfile

" Screen movements
set scrolloff=3
map mt zt
map mm zz
map mb zb

" TSlime
vmap <C-c><C-c> <Plug>SendSelectionToTmux
nmap <C-c><C-c> <Plug>NormalModeSendToTmux
nmap <C-c>r <Plug>SetTmuxVars

" General keyboard mappings
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
inoremap <C-j> <Esc><C-w>j
inoremap <C-k> <Esc><C-w>k

inoremap jj <ESC>
inoremap kk <ESC>

" unmap! <Leader><Leader>
" set autowrite true
" why is below slow??
map <Leader><Leader> <C-^>

" CtrlP file search
map <Leader>t :CtrlP<CR>
" map <Leader>g :CtrlPMRU<CR>
map <Leader>fk :CtrlPBuffer<cr>

map <Leader>[ :set invpaste<CR>:set paste?<CR>

" Tmux / turbux
let g:no_turbux_mappings = 1
map <leader>t <Plug>SendFocusedTestToTmux
map <leader>T <Plug>SendTestToTmux

" Rails Alternate file
map <Leader>ra :A<CR>
map <Leader>rl :R<CR>
" reverse results for easier viewing
" let g:CommandTMatchWindowReverse  = 1

" Ack - fin[D]
map <Leader>a :Ack<Space>
vnoremap ,a y:<C-U>Ack "<C-R>""<Space>

" Buffer switching
nnoremap <Leader>s :source %<CR>
" nnoremap <Leader>l :buffers<CR>:buffer<Space>

" Splits
" nnoremap <Leader>s :split<CR>
" nnoremap <Leader>v :vsplit<CR>
nnoremap <silent> + :exe "resize " . (winheight(0) * 3/2)<CR>
nnoremap <silent> - :exe "resize " . (winheight(0) * 2/3)<CR>

" Mappings to access buffers (don't use "\p" because a
" " delay before pressing "p" would accidentally paste).
nnoremap <Leader>1 :1b<CR>
nnoremap <Leader>2 :2b<CR>
nnoremap <Leader>3 :3b<CR>
nnoremap <Leader>4 :4b<CR>
nnoremap <Leader>5 :5b<CR>
nnoremap <Leader>6 :6b<CR>
nnoremap <Leader>7 :7b<CR>
nnoremap <Leader>8 :8b<CR>
nnoremap <Leader>9 :9b<CR>
nnoremap <Leader>0 :10b<CR>
" It's useful to show the buffer number in the status line.
" set laststatus=2 statusline=%02n:%<%f\ %h%m%r%=%-14.(%l,%c%V%)\ %P

" Cursor
if &term =~ "xterm\\|rxvt"
  " use an orange cursor in insert mode
  let &t_SI = "\<Esc>]12;orange\x7"
  " use a red cursor otherwise
  let &t_EI = "\<Esc>]12;red\x7"
  silent !echo -ne "\033]12;red\007"
  " reset cursor when vim exits
  autocmd VimLeave * silent !echo -ne "\033]112\007"
  " use \003]12;gray\007 for gnome-terminal
endif

" Tabularize
if exists(":Tabularize")
  nmap <Leader>a= :Tabularize /=<CR>
  vmap <Leader>a= :Tabularize /=<CR>
  nmap <Leader>a: :Tabularize /:\zs<CR>
  vmap <Leader>a: :Tabularize /:\zs<CR>
endif

" Tabularize Gherkin tables
inoremap <silent> <Bar>   <Bar><Esc>:call <SID>align()<CR>a

function! s:align()
  let p = '^\s*|\s.*\s|\s*$'
  if exists(':Tabularize') && getline('.') =~# '^\s*|' && (getline(line('.')-1) =~# p || getline(line('.')+1) =~# p)
    let column = strlen(substitute(getline('.')[0:col('.')],'[^|]','','g'))
    let position = strlen(matchstr(getline('.')[0:col('.')],'.*|\s*\zs.*'))
    Tabularize/|/l1
    normal! 0
    call search(repeat('[^|]*|',column).'\s\{-\}'.repeat('.',position),'ce',line('.'))
  endif
endfunction
